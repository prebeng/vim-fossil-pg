*fossil.txt*    Fossil plugin for vim.  Last change: 2023 Oct 12

Maintainer: Preben Guldberg <preben@guldberg.org>
License:    MIT, see |fossil-plugin-license|.


Introduction                                                          *fossil*

The plugin provides a set of vim commands for capturing the output of fossil
commands.  Captured output is generally captured in a temporary buffer (see
|:Fossil|, |:CFossil|, |:SFossil| and |:VFossil|), but can also be inserted
in the current buffer (see |:RFossil|).

Additional commands can be defined, e.g. `:Fdiff`, or `:Fstatus`, using
the |g:fossil_sub_cmds| variable.

Please see |fossil-variables| for further customisation.

For more information on fossil, see https://fossil-scm.org/.

NOTE: If you cannot find this document with `:help fossil`, please run
      |:helptags| on the directory where this file resides.

----------------------------------------------------------------------------
Commands                                                     *fossil-commands*

:[{mods}]Fossil[!] [arguments]                                *fossil-:Fossil*
        Run a fossil command and capture the output in a temporary buffer.
        If the window is closed, or you swap to another buffer, the buffer
        is wiped out (|bufhidden|=wipe).

        The window is split using |:split|, though this can be overridden by
        setting the |g:fossil_split| variable.

        See |<q-mods>| for possible {mods}.

        When [!] is used, the command is run as an external command and the
        output is not captured.  See |:Rfossil| for inserting the output in
        the current buffer.

:[{mods}]CFossil[!] [arguments]                              *fossil-:CFossil*
        As |:Fossil|, but the window is only split with {mods} (C for capture).

:[{mods}]SFossil[!] [arguments]                              *fossil-:SFossil*
        As |:Fossil|, adding |:split:| after any {mods} (S for split).

:[{mods}]VFossil[!] [arguments]                              *fossil-:VFossil*
        As |:Fossil|, adding |:vsplit:| after any {mods} (V for vsplit).

:[{range}]RFossil [arguments]                                *fossil-:RFossil*
        Read the output of a fossil command into the current buffer after
        the current line, or the last line in {range}.  Tab completion of
        [arguments] is done as with |:Fossil|.

:FRefresh                                                   *fossil-:FRefresh*
        Command to refesh the window.  The commands is saved by |:Fossil|
        and other commands as `b:_fossil_cmd_`.  If this variable does not
        exist, this command does nothing.

        To perform an auto-refresh of the output when swithing to a window
        with a temporary |:Fossil| buffer, use e.g.
>
            :au BufEnter {} FRefresh
<

----------------------------------------------------------------------------
Tab completion                                             *fossil-completion*

The default commands completes based on the following steps:

1. The first argument completes fossil command names.
2. Arguemnts starting with `-` uses applicable fossil command options.
3. Other arguments completes file names using |glob()|.

Commands created based on g:fossil_sub_cmds, like |:Fdiff|, use completion
steps 2. and 3. above.

NOTE: The lists of options are auto generated from `fossil help -a -v`.
      For fossil commands with sub commands, all options for any of the
      sub commands is included.

----------------------------------------------------------------------------
Plugin variables                                            *fossil-variables*

                                                         *fossil-g:fossil_cmd*
If set, use g:fossil_cmd instead of the default `fossil` to run commands.

                                                       *fossil-g:fossil_split*
The value of `g:fossil_split` is added after any modifiers specified on the
command line (see |<q-mods>|).  The value, if not empty, must include a final
|:split| or |:vsplit|, e.g.
>
    :let g:fossil_split = ''                    " Like :CFossil
    :let g:fossil_split = 'vsplit'              " Like :VFossil
    :let g:fossil_split = 'belowright vsplit'   " Using a modifer
<
                                                   *ossil-g:fossil_short_cmds*
The plugin will create short name versions of the commands, where e.g.
>
    :let g:fossil_split = ['F', 'CF', 'RF', 'SF', 'VF', 'FR']
<
would create all of the possible short name commands:

:F      As |:Fossil|, added if "F" is in |g:fossil_short_cmds|         *fossil-:F*
:CF     As |:CFossil|, added if "CF" is in |g:fossil_short_cmds|      *fossil-:CF*
:RF     As |:RFossil|, added if "RF" is in |g:fossil_short_cmds|      *fossil-:RF*
:SF     As |:SFossil|, added if "SF" is in |g:fossil_short_cmds|      *fossil-:SF*
:VF     As |:VFossil|, added if "VF" is in |g:fossil_short_cmds|      *fossil-:VF*
:FR     As |:FRefresh|, added if "FR" is in |g:fossil_short_cmds|     *fossil-:FR*

                                                    *fossil-g:fossil_sub_cmds*
If you set `g:fossil_sub_cmds` to a list of fossil sub commands, the plugin
will create custom commands.  For instance, if you set this in your |vimrc|,
>
    :let g:fossil_sub_cmds = ["diff"]
<
the following commands are created:

:Fdiff      Equivalent to running `:Fossil diff`                 *fossil-:Fdiff*
:CFdiff     Equivalent to running `:CFossil diff`               *fossil-:CFdiff*
:RFdiff     Equivalent to running `:RFossil diff`               *fossil-:RFdiff*
:SFdiff     Equivalent to running `:SFossil diff`               *fossil-:SFdiff*
:VFdiff     Equivalent to running `:VFossil diff`               *fossil-:VFdiff*

----------------------------------------------------------------------------
Syntax highlighting                                            *fossil-syntax*

The syntax highlighting highlights output in `fossil commit` messages as well
as output of e.g. `fossil` `status`, `timeline`, `praise` and `help` commands.

----------------------------------------------------------------------------
License                                                *fossil-plugin-license*

Copyright (c) 2023 Preben Guldberg

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
